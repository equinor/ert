name: everest-run-tests-build-docs

on:
  workflow_call:
    inputs:
      os:
        type: string
      python-version:
        type: string
      test-type:
        type: string

env:
  NO_PROJECT_RES: 1
  UV_SYSTEM_PYTHON: 1

jobs:
  tests-everest:
    name: Run everest tests
    timeout-minutes: 60
    runs-on: ${{ inputs.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install Everest and dependencies
      run: |
        uv pip install ".[dev,everest]"

    - name: Run Tests Linux
      if: ${{ inputs.test-type == 'test' && runner.os != 'macOS'}}
      run: |
        pytest tests/everest -n 4 --cov=ert --cov=everest --cov=_ert --cov-report=xml:cov1.xml --junit-xml=junit.xml -o junit_family=legacy -m "not integration_test" --dist loadgroup -sv

    - name: Run Tests macOS
      if: ${{ inputs.test-type == 'test' && runner.os == 'macOS'}}
      run: |
        python -m pytest tests/everest -n 4 --cov=ert --cov=everest --cov=_ert --cov-report=xml:cov1.xml --junit-xml=junit.xml -o junit_family=legacy -m "not integration_test and not fails_on_macos_github_workflow" --dist loadgroup -sv

    - name: Run Integration Tests Linux
      if: ${{inputs.test-type == 'integration-test' && runner.os != 'macOS'}}
      run: |
        pytest tests/everest -n 4 --cov=ert --cov=everest --cov=_ert --cov-report=xml:cov1.xml --junit-xml=junit.xml -o junit_family=legacy -m "integration_test" --dist loadgroup -sv

    - name: Run Integration Tests macOS
      if: ${{inputs.test-type == 'integration-test' && runner.os == 'macOS'}}
      run: |
        python -m pytest tests/everest -n 4 --cov=ert --cov=everest --cov=_ert --cov-report=xml:cov1.xml --junit-xml=junit.xml -o junit_family=legacy -m "integration_test and not fails_on_macos_github_workflow" --dist loadgroup

    - name: Build Documentation
      if: inputs.test-type == 'doc'
      run: |
        uv pip install git+https://github.com/equinor/everest-models.git
        mkdir tmp
        sphinx-build -n -v -E -W ./docs/everest ./tmp/everest_docs

    - name: Run tests requiring everest-models
      if: inputs.test-type == 'everest-models-test'
      run: |
        uv pip install git+https://github.com/equinor/everest-models.git
        python -m pytest tests/everest -n 4 --cov=ert --cov=everest --cov=_ert --cov-report=xml:cov1.xml --junit-xml=junit.xml -o junit_family=legacy -m everest_models_test --dist loadgroup

    - name: Test docs entry point
      if: inputs.test-type == 'everest-docs-entry-test'
      run: |
        python -m everest.docs

    - name: Upload coverage to Codecov
      id: codecov1
      uses: codecov/codecov-action@v4
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        files: cov1.xml,cov2.xml
        flags: ${{ inputs.test-type }}
    - name: codecov retry sleep
      if: steps.codecov1.outcome == 'failure'
      run: |
        sleep 30
    - name: Codecov retry
      uses: codecov/codecov-action@v4
      if: steps.codecov1.outcome == 'failure'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: cov1.xml,cov2.xml
        flags: ${{ inputs.test-type }}
        fail_ci_if_error: ${{ github.ref == 'refs/heads/main' }}

    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
