[build-system]
requires = [
    "setuptools",
    "setuptools_scm>=8.1",
]
build-backend = "setuptools.build_meta"

[project]
name = "ert"
authors = [
    { name = "Equinor ASA", email = "fg_sib-scout@equinor.com" },
]
description = "Ensemble based Reservoir Tool (ERT)"
requires-python = ">=3.8"
readme = "README.md"
license = { text = "GPL-3.0" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Other Environment",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
dynamic = ["version"]
dependencies = [
    "aiohttp",
    "backports-datetime_fromisoformat; python_version < '3.11'",
    "cryptography",
    "dask",  # extra dependency for xarray/pandas
    "deprecation",
    "dnspython >= 2",
    "fastapi",
    "filelock",
    "httpx",
    "humanize",
    "importlib_resources; python_version <= '3.8'",
    "iterative_ensemble_smoother>=0.2.6",
    "jinja2",
    "lark",
    "lxml",
    "matplotlib",
    "netCDF4",
    "numpy<2",
    "orjson",
    "packaging",
    "pandas",
    "pluggy>=1.3.0",
    "psutil",
    "pyarrow",  # extra dependency for pandas (parquet)
    "pydantic > 2",
    "PyQt5",
    "python-dateutil",
    "python-multipart",
    "pyyaml",
    "qtpy==2.4.1",
    "requests",
    "resfo",
    "scipy >= 1.10.1",
    "seaborn",
    "tables; python_version >= '3.9'",  # extra dependency for pandas (hdf5)
    "tables<3.9; python_version == '3.8'",
    "tabulate",
    "tqdm>=4.62.0",
    "typing_extensions>=4.5",
    "uvicorn >= 0.17.0",
    "websockets < 14",
    "xarray",
    "xtgeo >= 3.3.0",
]

[project.scripts]
ert = "ert.__main__:main"
"job_dispatch.py" = "_ert.forward_model_runner.job_dispatch:main"

[project.urls]
Repository = "https://github.com/equinor/ert"

[project.optional-dependencies]
dev = [
    "furo",
    "hypothesis!=6.102.0,>=5.49",
    "hypothesis>=6.11; python_version >= '3.12'",
    "jsonpath_ng",
    "jupyter",
    "jupytext",
    "nbsphinx",
    "oil_reservoir_synthesizer",
    "pytest-asyncio",
    "pytest-benchmark",
    "pytest-cov",
    "pytest-memray",
    "pytest-mock",
    "pytest-mpl",
    "pytest-qt",
    "pytest-raises",
    "pytest-rerunfailures",
    "pytest-snapshot",
    "pytest-timeout",
    "pytest-xdist",
    "pytest>6",
    "resdata",
    "resfo",
    "scikit-learn",
    "sphinx",
    "sphinx-argparse",
    "sphinx-autoapi",
    "sphinx-copybutton",
    "sphinxcontrib.datatemplates",
    "testpath",
]
style = [
    "pre-commit",
]
types = [
    "mypy",
    "types-lxml",
    "types-requests",
    "types-PyYAML",
    "types-python-dateutil",
    "types-decorator",
    "types-docutils",
    "types-tqdm",
    "types-psutil",
]

[tool.setuptools]
platforms = ["all"]

[tool.pytest.ini_options]
addopts = "-ra --strict-markers"
markers = [
    "integration_test",
    "out_of_memory",
    "quick_only",
    "requires_eclipse",
    "requires_window_manager",
    "script",
    "slow",
]
log_cli = "false"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
timeout = 360

[tool.setuptools_scm]
write_to = "src/ert/shared/version.py"

[tool.ruff]
src = ["src"]
line-length = 88

[tool.ruff.lint]
select = [
    "W",     # pycodestyle
    "I",     # isort
    "B",     # flake-8-bugbear
    "SIM",   # flake-8-simplify
    "F",     # pyflakes
    "PL",    # pylint
    "NPY",   # numpy specific rules
    "C4",    # flake8-comprehensions
    "ASYNC", # flake8-async
    "RUF",   # ruff specific rules
]
preview = true
ignore = [
    "PLW2901", # redefined-loop-name
    "PLR2004", # magic-value-comparison
    "PLR0915", # too-many-statements
    "PLR0912", # too-many-branches
    "PLR0911", # too-many-return-statements
    "PLC2701", # import-private-name
    "PLR6201", # literal-membership
    "PLR0914", # too-many-locals
    "PLR6301", # no-self-use
    "PLW1641", # eq-without-hash
    "PLR0904", # too-many-public-methods
    "PLR1702", # too-many-nested-blocks
    "PLW3201", # bad-dunder-method-name
]

# Allow EN DASH (U+2013)
allowed-confusables = ["â€“"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = [
    "PLW0603", # global-statement
    "RUF029",  # unused-async
    "RUF018",  # assignment-in-assert
    "RUF006",  # asyncio-dangling-task
]
"src/ert/dark_storage/json_schema/__init__.py" = ["F401"]
"src/ert/dark_storage/*" = ["RUF029"] # unused-async

[tool.ruff.lint.pylint]
max-args = 20

[tool.pyright]
include = ["src"]
exclude = ["tests"]
reportMissingImports = "error"
typeCheckingMode = "standard"
pythonVersion = "3.8"

[tool.pyright.defineConstant]
PYSIDE6 = false
PYQT5 = true
PYSIDE2 = false
PYQT6 = false
